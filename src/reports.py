import pandas as pd
import time
import logging

logging.basicConfig(level=logging.INFO)

def log_execution_time(func):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏."""
    def wrapper(*args, **kwargs):
        start_time = time.time()
        result = func(*args, **kwargs)
        elapsed_time = time.time() - start_time
        logging.info(f"‚è≥ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è {func.__name__}: {elapsed_time:.4f} —Å–µ–∫")
        return result
    return wrapper

@log_execution_time
def generate_reports(transactions: pd.DataFrame):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á—ë—Ç –æ —Ç—Ä–∞—Ç–∞—Ö –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏."""
    if transactions.empty:
        logging.warning("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞!")
        return {}

    transactions["–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏"] = transactions["–î–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏"].dt.day_name()
    spending_by_weekday = transactions.groupby("–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏")["–°—É–º–º–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏"].sum().to_dict()

    logging.info(f"üìÖ –¢—Ä–∞—Ç—ã –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏:\n{spending_by_weekday}")
    return {"spending_by_weekday": spending_by_weekday}
