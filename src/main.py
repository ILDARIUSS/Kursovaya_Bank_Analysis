import json
import logging
import datetime
from src.utils import load_transactions
from src.views import generate_main_page
from src.services import process_transactions
from src.reports import generate_reports

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

def main():
    logging.info("üöÄ –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è...")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞
    transactions = load_transactions("data/operations.xlsx")

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    logging.info("üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
    current_time = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    main_page_json = generate_main_page(transactions, current_time)

    print(json.dumps(main_page_json, indent=4, ensure_ascii=False))

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (–°–µ—Ä–≤–∏—Å)
    logging.info("üìä –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ 01-2025")
    service_result = process_transactions(transactions, month=1, year=2025)

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º Timestamps –≤ —Å—Ç—Ä–æ–∫–∏ –ø–µ—Ä–µ–¥ JSON-—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
    for txn in service_result["transactions"]:
        txn["–î–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏"] = txn["–î–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏"].strftime("%Y-%m-%dT%H:%M:%S")

    print(json.dumps(service_result, indent=4, ensure_ascii=False))

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
    report_date = datetime.datetime.now().strftime("%Y-%m-%d")
    logging.info("üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ –Ω–∞ %s", report_date)
    report_result = generate_reports(transactions, report_date)

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º Timestamps –≤ —Å—Ç—Ä–æ–∫–∏ –ø–µ—Ä–µ–¥ JSON-—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
    for date in report_result["spending_by_weekday"]:
        report_result["spending_by_weekday"][date] = float(report_result["spending_by_weekday"][date])

    print(json.dumps(report_result, indent=4, ensure_ascii=False))

if __name__ == "__main__":
    main()
