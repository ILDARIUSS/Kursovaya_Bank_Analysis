import os
import requests
import logging
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä
logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
API_KEY = os.getenv("EXCHANGE_API_KEY")

if not API_KEY:
    logger.error("‚ùå API-–∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å —Ñ–∞–π–ª .env")
    raise ValueError("API-–∫–ª—é—á –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –£–∫–∞–∂–∏—Ç–µ EXCHANGE_API_KEY –≤ .env —Ñ–∞–π–ª–µ.")

def get_exchange_rate(currency: str) -> float:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ä—É–±–ª—è —Å API Apilayer.

    :param currency: –ö–æ–¥ –≤–∞–ª—é—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'USD', 'EUR')
    :return: –ö—É—Ä—Å –≤–∞–ª—é—Ç—ã –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ —Ä—É–±–ª—é
    """
    url = "https://api.apilayer.com/exchangerates_data/latest"
    headers = {"apikey": API_KEY}
    params = {"base": currency, "symbols": "RUB"}  # –ú–µ–Ω—è–µ–º base, —á—Ç–æ–±—ã API –≤—ã–¥–∞–≤–∞–ª USD‚ÜíRUB, EUR‚ÜíRUB

    logger.info("üîç –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ API: %s", url)
    logger.info("üìå –ó–∞–≥–æ–ª–æ–≤–∫–∏: %s", headers)
    logger.info("üìå –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞: %s", params)

    response = requests.get(url, headers=headers, params=params)

    try:
        data = response.json()
        logger.info("üì© –û—Ç–≤–µ—Ç API: %s", data)

        if not data.get("success") or "rates" not in data:
            raise ValueError(f"–û—à–∏–±–∫–∞ API: {response.status_code} - {data}")

        return float(data["rates"]["RUB"])  # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å RUB

    except requests.exceptions.RequestException as e:
        logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: %s", e)
        raise
